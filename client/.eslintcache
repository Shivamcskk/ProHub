[{"C:\\Users\\91637\\mern\\client\\src\\App.js":"1","C:\\Users\\91637\\mern\\client\\src\\index.js":"2","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Landing.js":"4","C:\\Users\\91637\\mern\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\91637\\mern\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\91637\\mern\\client\\src\\store.js":"7","C:\\Users\\91637\\mern\\client\\src\\reducers\\index.js":"8","C:\\Users\\91637\\mern\\client\\src\\reducers\\alert.js":"9","C:\\Users\\91637\\mern\\client\\src\\actions\\types.js":"10","C:\\Users\\91637\\mern\\client\\src\\actions\\alert.js":"11","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\91637\\mern\\client\\src\\actions\\auth.js":"13","C:\\Users\\91637\\mern\\client\\src\\reducers\\auth.js":"14","C:\\Users\\91637\\mern\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\91637\\mern\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\91637\\mern\\client\\src\\reducers\\profile.js":"18","C:\\Users\\91637\\mern\\client\\src\\actions\\profile.js":"19","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\DashboardAction.js":"22","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Experience.js":"26","C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Education.js":"27","C:\\Users\\91637\\mern\\client\\src\\components\\profiles\\Profiles.js":"28","C:\\Users\\91637\\mern\\client\\src\\components\\profiles\\ProfileItem.js":"29","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\Profile.js":"30","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileTop.js":"31","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileAbout.js":"32","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileExperience.js":"33","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileEducation.js":"34","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileGithub.js":"35"},{"size":2224,"mtime":1608362815193,"results":"36","hashOfConfig":"37"},{"size":391,"mtime":1607839005885,"results":"38","hashOfConfig":"37"},{"size":1205,"mtime":1608357448882,"results":"39","hashOfConfig":"37"},{"size":883,"mtime":1608191455780,"results":"40","hashOfConfig":"37"},{"size":2950,"mtime":1608301844181,"results":"41","hashOfConfig":"37"},{"size":2252,"mtime":1608301811088,"results":"42","hashOfConfig":"37"},{"size":377,"mtime":1607875973937,"results":"43","hashOfConfig":"37"},{"size":193,"mtime":1608188641220,"results":"44","hashOfConfig":"37"},{"size":408,"mtime":1607878345212,"results":"45","hashOfConfig":"37"},{"size":680,"mtime":1608356721158,"results":"46","hashOfConfig":"37"},{"size":352,"mtime":1607880209247,"results":"47","hashOfConfig":"37"},{"size":457,"mtime":1607880706205,"results":"48","hashOfConfig":"37"},{"size":2195,"mtime":1608196555050,"results":"49","hashOfConfig":"37"},{"size":1376,"mtime":1608297642847,"results":"50","hashOfConfig":"37"},{"size":266,"mtime":1607942218787,"results":"51","hashOfConfig":"37"},{"size":1948,"mtime":1608380883419,"results":"52","hashOfConfig":"37"},{"size":570,"mtime":1608187904853,"results":"53","hashOfConfig":"37"},{"size":1228,"mtime":1608356841762,"results":"54","hashOfConfig":"37"},{"size":6282,"mtime":1608363790848,"results":"55","hashOfConfig":"37"},{"size":274,"mtime":1608196050160,"results":"56","hashOfConfig":"37"},{"size":6202,"mtime":1608301078380,"results":"57","hashOfConfig":"37"},{"size":730,"mtime":1608270655913,"results":"58","hashOfConfig":"37"},{"size":7486,"mtime":1608366845313,"results":"59","hashOfConfig":"37"},{"size":3128,"mtime":1608278489589,"results":"60","hashOfConfig":"37"},{"size":3122,"mtime":1608298828746,"results":"61","hashOfConfig":"37"},{"size":1594,"mtime":1608379538559,"results":"62","hashOfConfig":"37"},{"size":1609,"mtime":1608371842997,"results":"63","hashOfConfig":"37"},{"size":1577,"mtime":1608381011382,"results":"64","hashOfConfig":"37"},{"size":1413,"mtime":1608380779415,"results":"65","hashOfConfig":"37"},{"size":2921,"mtime":1608386292007,"results":"66","hashOfConfig":"37"},{"size":2090,"mtime":1608383164458,"results":"67","hashOfConfig":"37"},{"size":1016,"mtime":1608384179422,"results":"68","hashOfConfig":"37"},{"size":735,"mtime":1608384826386,"results":"69","hashOfConfig":"37"},{"size":834,"mtime":1608385764806,"results":"70","hashOfConfig":"37"},{"size":2217,"mtime":1608388979748,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"nj9x7y",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\91637\\mern\\client\\src\\App.js",[],["155","156"],"C:\\Users\\91637\\mern\\client\\src\\index.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Navbar.js",["157"],"import React, { Fragment } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport {logout} from '../../actions/auth'\r\nfunction Navbar({auth:{isAuthenticated,loading},logout}) {\r\n  const authLinks=(\r\n    <ul>\r\n       <li><Link to='/profiles'>Users</Link></li>\r\n       <li><Link to='/dashboard'><i className=\"fas fa-user\"/>{' '}<span className=\"hide-sm\">Dashboard</span></Link></li>\r\n    <li><Link to='#!' onClick={logout}><i className=\"fas fa-sign-out-alt\"/>{' '}<span className=\"hide-sm\">Logout</span></Link></li>\r\n    \r\n  </ul>\r\n  );\r\n\r\n  \r\n  const guestLinks=( <ul>\r\n    <li><Link to='/profiles'>Users</Link></li>\r\n    <li><Link to='/register'>Register</Link></li>\r\n    <li><Link to='/login'>Login</Link></li>\r\n  </ul>);\r\n   \r\n  \r\n  return (\r\n        <nav className=\"navbar\" style={{backgroundColor:\"#0d1117\"}}>\r\n      <h1>\r\n        <Link to='/'><i className=\"fas fa-rocket\"></i>ProHub</Link>\r\n      </h1>\r\n     {!loading&& <Fragment>{isAuthenticated?authLinks:guestLinks}</Fragment>}\r\n    </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps= state=>({\r\n  auth:state.auth\r\n})\r\nexport default connect(mapStateToProps,{logout})(Navbar);","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\91637\\mern\\client\\src\\store.js",[],"C:\\Users\\91637\\mern\\client\\src\\reducers\\index.js",[],"C:\\Users\\91637\\mern\\client\\src\\reducers\\alert.js",["158"],"\r\nimport {SET_ALERT,REMOVE_ALERT} from '../actions/types'\r\nconst initialState=[];\r\nexport default function(state=initialState,action){\r\n    const {type,payload}=action;\r\n    switch(type)\r\n    {\r\n        case SET_ALERT:\r\n            return [...state,payload] ;\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert=>alert.id!==payload);\r\n            default :\r\n            return state;\r\n    }\r\n}","C:\\Users\\91637\\mern\\client\\src\\actions\\types.js",[],"C:\\Users\\91637\\mern\\client\\src\\actions\\alert.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\91637\\mern\\client\\src\\actions\\auth.js",["159"],"import Axios from 'axios';\r\nimport {setAlert, SetAlert} from './alert';\r\nimport {REGISTER_FAIL,REGISTER_SUCCESS,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_PROFILE} from '../actions/types';\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\nexport const loaduser=()=>async dispatch=>{\r\n    if(localStorage.token)\r\n    {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n      \r\n        const res=await Axios.get('/api/auth');\r\n        \r\n        dispatch({\r\n            type:USER_LOADED,\r\n            payload:res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        console.log(err.message)\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\nexport const register =({name,email,password})=>async dispatch =>{\r\n    const config ={\r\n        headers:{\r\n            'content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body=JSON.stringify({name,email,password});\r\n\r\n    try {\r\n    const res=await Axios.post('/api/users',body,config);\r\n    dispatch({\r\n        type:REGISTER_SUCCESS,\r\n        payload:res.data\r\n    });    \r\n    dispatch(loaduser());\r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\nexport const login =({email,password})=>async dispatch =>{\r\n    const config ={\r\n        headers:{\r\n            'content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body=JSON.stringify({email,password});\r\n\r\n    try {\r\n       \r\n    const res=await Axios.post('/api/auth',body,config);\r\n    dispatch({\r\n        type:LOGIN_SUCCESS,\r\n        payload:res.data\r\n    });    \r\n    dispatch(loaduser());\r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\nexport const logout=()=> dispatch=>{\r\n    dispatch({type:CLEAR_PROFILE})\r\n    dispatch({type:LOGOUT})\r\n}","C:\\Users\\91637\\mern\\client\\src\\reducers\\auth.js",["160"],"\r\nimport {REGISTER_FAIL,REGISTER_SUCCESS,USER_LOADED,AUTH_ERROR,LOGIN_FAIL,LOGIN_SUCCESS,LOGOUT, ACCOUNT_DELETED} from '../actions/types';\r\n\r\nconst initialState={\r\n    token:localStorage.getItem('token'),\r\n    isAuthenticated:null,\r\n    loading:true,\r\n    user:null\r\n}\r\n\r\n\r\n\r\nexport default function(state=initialState,action)\r\n{\r\n    const {type,payload}=action;\r\n    switch(type)\r\n    {\r\n        \r\n            \r\n        case USER_LOADED:\r\n            \r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                loading:false,\r\n                user:payload\r\n            }\r\n            \r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',payload.token);\r\n            return{\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated:true,\r\n                loading:false\r\n            }\r\n        \r\n               \r\n       \r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                user:null,\r\n                token:null,\r\n                isAuthenticated:false,\r\n                loading:false\r\n            };\r\n\r\n        default :\r\n        return state;\r\n    }\r\n}","C:\\Users\\91637\\mern\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Dashboard.js",["161"],"import React,{Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {deleteAccount, getCurrentProfile} from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner'\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardAction from './DashboardAction'\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nconst Dashboard = ({getCurrentProfile,auth:{user},profile:{profile,loading},deleteAccount}) => {\r\n    useEffect(\r\n        ()=>{\r\n            getCurrentProfile();\r\n        },[]\r\n    )\r\n\r\n    return (\r\n        loading && profile===null ? <Spinner/> :<Fragment>\r\n            <h1 className=\"large text-success\" style={{fontWeight:\"lighter\"}}>Dashboard</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i><span >Welcome,</span> <span style={{color:\"#1a4654\"}}>{user && user.name}</span>\r\n            </p>\r\n            {profile !==null ? <Fragment>\r\n                <DashboardAction/>\r\n                <Experience experience={profile.experience}/>\r\n                <Education education={profile.education}/>\r\n                <div className=\"my-2\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>deleteAccount()}>\r\n                        <i className=\"fas fa-user-minus\">Delete Account</i>\r\n                    </button>\r\n                </div>\r\n\r\n            </Fragment> :<Fragment><p>No profile found,Please add details</p><Link to='/create-profile' className=\"btn btn-primary my-1\">Create profile</Link></Fragment>}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    profile:PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth,\r\n    profile:state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{getCurrentProfile,deleteAccount})(Dashboard);\r\n\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\91637\\mern\\client\\src\\reducers\\profile.js",["162"],"import { GET_PROFILE,GET_PROFILES, PROFILE_ERROR,CLEAR_PROFILE, UPDATE_PROFILE, GET_REPOS } from \"../actions/types\";\r\n\r\nconst initialState={\r\n    profile:null,\r\n    profiles:[],\r\n    respos:[],\r\n    loading:true,\r\n    error:{}\r\n}\r\nexport default function (state=initialState,action){\r\n    const {type,payload}=action;\r\n    switch(type)\r\n    {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile:payload,\r\n                loading:false\r\n            };\r\n        case GET_PROFILES:\r\n            return{\r\n                ...state,\r\n                profiles:payload,\r\n                loading:false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return{\r\n                ...state,\r\n                error:payload,\r\n                loading:false\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile:null,\r\n                repos:[],\r\n                loading:false\r\n            }\r\n        case GET_REPOS:\r\n            return{\r\n                ...state,\r\n                repos:payload,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\91637\\mern\\client\\src\\actions\\profile.js",["163"],"import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {CLEAR_PROFILE, GET_PROFILE,GET_PROFILES,GET_REPOS,PROFILE_ERROR, UPDATE_PROFILE,ACCOUNT_DELETED} from './types';\r\n\r\n\r\nexport const getCurrentProfile=()=>async dispatch=>{\r\ntry {\r\n    const res=await axios.get('/api/profile/me');\r\n    dispatch({\r\n        type:GET_PROFILE,\r\n        payload:res.data\r\n    })\r\n} catch (err) {\r\n    dispatch({\r\n        type:PROFILE_ERROR,\r\n        payload:{msg:err.response.statusText,status:err.response.status}\r\n    })\r\n}\r\n}\r\nexport const getProfiles=()=>async dispatch=>{\r\n    dispatch({type:CLEAR_PROFILE})\r\n    try {\r\n        const res=await axios.get('/api/profile/');\r\n        dispatch({\r\n            type:GET_PROFILES,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n    }\r\nexport const getProfilesById=(userId)=>async dispatch=>{\r\n    console.log(userId);\r\n        try {\r\n            const res=await axios.get(`/api/profile/user/${userId}`);\r\n            \r\n            dispatch({\r\n                type:GET_PROFILE,\r\n                payload:res.data\r\n            })\r\n        } catch (err) {\r\n            \r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload:{msg:err.response.statusText,status:err.response.status}\r\n            })\r\n        }\r\n        }\r\n    export const getGithubRepos=(username)=>async dispatch=>{\r\n        \r\n            try {\r\n                const res=await axios.get(`/api/profile/github/${username}`);\r\n                dispatch({\r\n                    type:GET_REPOS,\r\n                    payload:res.data\r\n                })\r\n            } catch (err) {\r\n                dispatch({\r\n                    type:PROFILE_ERROR,\r\n                    payload:{msg:err.response.statusText,status:err.response.status}\r\n                })\r\n            }\r\n            }\r\n//create or update\r\nexport const createProfile=(formData,history,edit=false)=>async dispatch =>\r\n{\r\n    try {\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const res=await axios.post('/api/profile',formData,config);\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert(edit ?'Profile Updated':\"Profile Created\",'success' ));\r\n      \r\n            history.push('/dashboard');\r\n        \r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\n//Add Experience\r\nexport const addExperience=(formData,history)=> async dispatch =>{\r\n\r\n    try {\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const res=await axios.put('/api/profile/experience',formData,config);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Experience Added','success' ));\r\n      \r\n            history.push('/dashboard');\r\n        \r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const addEducation=(formData,history)=> async dispatch =>{\r\n\r\n    try {\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const res=await axios.put('/api/profile/education',formData,config);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Education Added','success' ));\r\n      \r\n            history.push('/dashboard');\r\n        \r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\n//delete\r\nexport const deleteExperience=id=>async dispatch =>{\r\n    try {\r\n        const res=await axios.delete(`/api/profile/experience/${id}`);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Experience Removed','success' ));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n};\r\nexport const deleteEducation=id=>async dispatch =>{\r\n    try {\r\n        const res=await axios.delete(`/api/profile/education/${id}`);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Education Removed','success' ));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const deleteAccount=()=>async dispatch =>{\r\n    if(window.confirm('Are You Sure You wanna Delete Your Account?'))\r\n    {\r\n        try {\r\n            const res=await axios.delete('/api/profile/');\r\n            dispatch({\r\n                type:CLEAR_PROFILE,\r\n                \r\n            });\r\n            dispatch({\r\n                type:ACCOUNT_DELETED,\r\n                \r\n            });\r\n            dispatch(setAlert('YOUR ACCOUNT HAS BEEN PERMANATLY DELETED'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload:{msg:err.response.statusText,status:err.response.status}\r\n            })\r\n        }\r\n    }\r\n    \r\n}","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Spinner.js",["164"],"import React,{Fragment} from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default ()=>(\r\n    <Fragment>\r\n        <img \r\n        src={spinner}\r\n        style={{width:\"700px\",margin:\"auto\",display:\"block\"}}\r\n        alt='Loading..'\r\n        />\r\n    </Fragment>\r\n);","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\DashboardAction.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\EditProfile.js",["165"],"import React,{Fragment, useState,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport {createProfile,getCurrentProfile} from '../../actions/profile'\r\nconst EditProfile = ({profile:{profile,loading},createProfile,history,getCurrentProfile}) => {\r\n    const [formData,SetFormData]=useState({\r\n        company:'',\r\n        website:'',\r\n        location:'',\r\n        status:'',\r\n        skills:'',\r\n        githubusername:'',\r\n        bio:'',\r\n        twitter:'',\r\n        facebook:'',\r\n        linkedin:'',\r\n        youtube:'',\r\n        instagram:''\r\n    });\r\n    const [displaysocialInputs,toggleSocialInputs]=useState(false);\r\n    useEffect(()=>{\r\n        getCurrentProfile();\r\n        SetFormData({\r\n            company:loading || !profile.company?'':profile.company,\r\n            website:loading || !profile.website?'':profile.website,\r\n            location:loading || !profile.location?'':profile.location,\r\n            status:loading || !profile.status?'':profile.status,\r\n            skills:loading || !profile.skills?'':profile.skills.join(','),\r\n            githubusername:loading || !profile.githubusername?'':profile.githubusername,\r\n            bio:loading || !profile.bio?'':profile.bio,\r\n            twitter:loading || !profile.social.twitter?'':profile.social.twitter,\r\n            facebook:loading || !profile.social.facebook?'':profile.social.facebook,\r\n            linkedin:loading || !profile.social.linkedin?'':profile.social.linkedin,\r\n            youtube:loading || !profile.social.youtube?'':profile.social.youtube,\r\n            instagram:loading || !profile.social.instagram?'':profile.social.instagram\r\n        })\r\n    },[loading])\r\n    const{\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    }=formData;\r\n    const onChange =e =>SetFormData({...formData,[e.target.name]:e.target.value});\r\n     \r\n    const onsubmit=e=>{\r\n        e.preventDefault();\r\n        createProfile(formData,history,true)\r\n    }\r\n    return (\r\n        <Fragment> \r\n            <h1 className=\"large\" style={{color:\"black\",textAlign:\"center\"}}>\r\n        Edit Your Profile\r\n      </h1>\r\n      <p className=\"lead\" style={{width:\"50%\",margin:\"0 auto\"}}>\r\n        <i className=\"fas fa-user\"></i> Some Truth and some Myth and You are done\r\n        <h6 style={{textAlign:\"left\"}}>* = required field</h6>\r\n      </p>\r\n      \r\n      <form className=\"form\" style={{width:\"50%\",margin:\"0 auto\"}} onSubmit={e=>onsubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e=>onChange(e)}>\r\n            <option value=\"0\">* Select Your Profession</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\"  value={company} onChange={e=>onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\"  value={website} onChange={e=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\"  value={location} onChange={e=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Bangalore, karnataka)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\"  value={skills} onChange={e=>onChange(e)}/>\r\n          {console.log(skills)}\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,React)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername} onChange={e=>onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\"  value={bio} onChange={e=>onChange(e)}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={()=>toggleSocialInputs(!displaysocialInputs)}\r\n          type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaysocialInputs &&<Fragment>\r\n            <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\"  value={twitter} onChange={e=>onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\"  value={facebook} onChange={e=>onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\"  value={youtube} onChange={e=>onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\"  value={linkedin} onChange={e=>onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\"  value={instagram} onChange={e=>onChange(e)}/>\r\n        </div>\r\n        </Fragment>}\r\n      \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nEditProfile.propTypes = {\r\n    createProfile:PropTypes.func.isRequired,\r\n    profile:PropTypes.func.isRequired,\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n\r\n}\r\nconst mapStateToProps =state =>({\r\n    profile:state.profile\r\n}); \r\n\r\nexport default connect(mapStateToProps,{createProfile,getCurrentProfile})(withRouter(EditProfile));\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\AddEducation.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profiles\\ProfileItem.js",["166"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nconst ProfileItem = (props) => {\r\n   \r\n    return (\r\n        <div className=\"profile bg-light\" style={{minHeight:\"35vh\",marginLeft:\"auto\",marginRight:\"auto\"}}>\r\n           <img className=\"round-img\" style={{width:\"80%\",marginBottom:\"10%\",marginTop:\"-8%\"}} src={props.profile.user.avatar} alt=\"\"/>\r\n           <div style={{marginTop:\"-12%\"}}>\r\n               <h2 style={{marginTop:\"-2%\"}}>{props.profile.user.name}</h2>\r\n               <p>{props.profile.status} {props.profile.company && <span> at {props.profile.company}</span>}</p>\r\n               <p style={{marginTop:'1%'}}>{props.profile.location && <span>{props.profile.location}</span>}</p>\r\n               <Link to={`/profile/${props.profile.user._id}`} className='btn btn-primary' style={{borderRadius:\"5px\"}}>View Profile</Link>\r\n           </div>\r\n           <ul>\r\n               <h3>Skill Set</h3>\r\n               {props.profile.skills && props.profile.skills.slice(0,4).map((skill,index)=>(\r\n                   <li key={index} className=\"text-success\"  style={{background:\"white\",border:\"solid 1px #d6d6d6\"}}>\r\n                       <i className=\"fas fa-check\" style={{marginLeft:\"10%\"}}/><span>{skill}</span>\r\n                   </li>\r\n               ))}\r\n           </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileItem;\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\Profile.js",["167","168"],"import React,{Fragment, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {connect}  from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {getProfilesById} from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nconst Profile = ({match,getProfilesById,profile:{profile,loading},auth}) => {\r\n    \r\n    useEffect(()=>{\r\n        getProfilesById(match.params.id);\r\n    },[getProfilesById])\r\n    return (\r\n        <Fragment>\r\n            {profile===null || loading ? <Spinner/> :<Fragment>\r\n                <Link to=\"/profiles\" className='btn btn-primary'>\r\n                    Back\r\n                </Link>\r\n                {auth.isAuthenticated && auth.loading===false && auth.user._id===profile.user._id && (\r\n                    <Link to='/edit-profile' className='btn btn-dark' style={{color:\"black\"}}>Edit Profile</Link>\r\n                )}\r\n                <div className=\"profile-grid my-1\">\r\n                    <ProfileTop profile={profile}/>\r\n                    <ProfileAbout profile={profile}/>\r\n                    <div class=\"profile-exp bg-white p-2\">\r\n                    <h2 class=\"text-primary\">Experience</h2>\r\n                    {profile.experience.length>0 ?(\r\n                        <Fragment>\r\n                            {profile.experience.map(exp=>(\r\n                                <ProfileExperience key={exp._id}\r\n                                experience={exp}/>\r\n                            ))}\r\n                        </Fragment>):(\r\n                            <h4>No Experience Credentials</h4>\r\n                        )\r\n                    }\r\n                    </div>\r\n                    <div class=\"profile-edu bg-white p-2\">\r\n                    <h2 class=\"text-primary\">Education</h2>\r\n                    {profile.education.length>0 ?(\r\n                        <Fragment>\r\n                            {profile.education.map(edu=>(\r\n                                <ProfileEducation key={edu._id}\r\n                               education={edu}/>\r\n                            ))}\r\n                        </Fragment>):(\r\n                            <h4>No Education Credentials</h4>\r\n                        )\r\n                    }\r\n                   \r\n                </div>\r\n                {profile.githubusername &&(\r\n                    <ProfileGithub username={profile.githubusername}/>\r\n                )}\r\n                </div>\r\n               \r\n                 \r\n                </Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToprops=state=>({\r\n    profile:state.profile,\r\n    auth:state.auth\r\n})\r\nexport default connect(mapStateToprops,{getProfilesById})(Profile)\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileExperience.js",["169"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nconst ProfileExperience = ({experience:{\r\n    company,title,location,current,to,from,description\r\n}}) => {\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-dark\">{company}</h3>\r\n            <p>\r\n                <Moment format=\"YYYY/MM/DD\">{from}</Moment> - {\r\n                    !to ?' Now':<Moment format=\"YYYY/MM/DD\">{to}</Moment>\r\n                }\r\n            </p>\r\n            <p><strong>Position: </strong>{title}</p>\r\n            <p>\r\n              <strong>Description: {description} </strong>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n\r\n}\r\n\r\nexport default ProfileExperience\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileEducation.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileGithub.js",["170","171","172"],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":4,"column":1,"nodeType":"183","endLine":15,"endColumn":2},{"ruleId":"177","severity":1,"message":"184","line":2,"column":19,"nodeType":"179","messageId":"180","endLine":2,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":13,"column":1,"nodeType":"183","endLine":58,"endColumn":2},{"ruleId":"185","severity":1,"message":"186","line":14,"column":11,"nodeType":"187","endLine":14,"endColumn":13,"suggestions":"188"},{"ruleId":"181","severity":1,"message":"182","line":10,"column":1,"nodeType":"183","endLine":49,"endColumn":2},{"ruleId":"177","severity":1,"message":"189","line":195,"column":19,"nodeType":"179","messageId":"180","endLine":195,"endColumn":22},{"ruleId":"181","severity":1,"message":"190","line":4,"column":1,"nodeType":"183","endLine":12,"endColumn":3},{"ruleId":"185","severity":1,"message":"191","line":38,"column":7,"nodeType":"187","endLine":38,"endColumn":16,"suggestions":"192"},{"ruleId":"177","severity":1,"message":"178","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":17},{"ruleId":"185","severity":1,"message":"193","line":16,"column":7,"nodeType":"187","endLine":16,"endColumn":24,"suggestions":"194"},{"ruleId":"177","severity":1,"message":"178","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"185","severity":1,"message":"195","line":10,"column":8,"nodeType":"187","endLine":10,"endColumn":10,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":25,"column":37,"nodeType":"199","endLine":25,"endColumn":52},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'SetAlert' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["202"],"'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social.facebook', 'profile.social.instagram', 'profile.social.linkedin', 'profile.social.twitter', 'profile.social.youtube', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["203"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["204"],"React Hook useEffect has missing dependencies: 'getGithubRepos' and 'username'. Either include them or remove the dependency array. If 'getGithubRepos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["205"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"214","text":"215"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social.facebook, profile.social.instagram, profile.social.linkedin, profile.social.twitter, profile.social.youtube, profile.status, profile.website]",{"range":"216","text":"217"},"Update the dependencies array to be: [getProfilesById, match.params.id]",{"range":"218","text":"219"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"220","text":"221"},[579,581],"[getCurrentProfile]",[1747,1756],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social.facebook, profile.social.instagram, profile.social.linkedin, profile.social.twitter, profile.social.youtube, profile.status, profile.website]",[650,667],"[getProfilesById, match.params.id]",[345,347],"[getGithubRepos, username]"]