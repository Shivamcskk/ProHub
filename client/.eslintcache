[{"C:\\Users\\91637\\mern\\client\\src\\App.js":"1","C:\\Users\\91637\\mern\\client\\src\\index.js":"2","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Landing.js":"4","C:\\Users\\91637\\mern\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\91637\\mern\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\91637\\mern\\client\\src\\store.js":"7","C:\\Users\\91637\\mern\\client\\src\\reducers\\index.js":"8","C:\\Users\\91637\\mern\\client\\src\\reducers\\alert.js":"9","C:\\Users\\91637\\mern\\client\\src\\actions\\types.js":"10","C:\\Users\\91637\\mern\\client\\src\\actions\\alert.js":"11","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\91637\\mern\\client\\src\\actions\\auth.js":"13","C:\\Users\\91637\\mern\\client\\src\\reducers\\auth.js":"14","C:\\Users\\91637\\mern\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\91637\\mern\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\91637\\mern\\client\\src\\reducers\\profile.js":"18","C:\\Users\\91637\\mern\\client\\src\\actions\\profile.js":"19","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\DashboardAction.js":"22","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Experience.js":"26","C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Education.js":"27","C:\\Users\\91637\\mern\\client\\src\\components\\profiles\\Profiles.js":"28","C:\\Users\\91637\\mern\\client\\src\\components\\profiles\\ProfileItem.js":"29","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\Profile.js":"30","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileTop.js":"31","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileAbout.js":"32","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileExperience.js":"33","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileEducation.js":"34","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileGithub.js":"35","C:\\Users\\91637\\mern\\client\\src\\reducers\\post.js":"36","C:\\Users\\91637\\mern\\client\\src\\components\\posts\\Posts.js":"37","C:\\Users\\91637\\mern\\client\\src\\actions\\post.js":"38","C:\\Users\\91637\\mern\\client\\src\\components\\posts\\PostItem.js":"39","C:\\Users\\91637\\mern\\client\\src\\components\\posts\\PostForm.js":"40","C:\\Users\\91637\\mern\\client\\src\\components\\post\\Post.js":"41","C:\\Users\\91637\\mern\\client\\src\\components\\post\\CommentForm.js":"42","C:\\Users\\91637\\mern\\client\\src\\components\\post\\CommentItem.js":"43","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Footer.js":"44"},{"size":2544,"mtime":1608470930552,"results":"45","hashOfConfig":"46"},{"size":391,"mtime":1607839005885,"results":"47","hashOfConfig":"46"},{"size":1253,"mtime":1608444187791,"results":"48","hashOfConfig":"46"},{"size":1034,"mtime":1608471114058,"results":"49","hashOfConfig":"46"},{"size":2950,"mtime":1608466102106,"results":"50","hashOfConfig":"46"},{"size":2252,"mtime":1608466102102,"results":"51","hashOfConfig":"46"},{"size":377,"mtime":1607875973937,"results":"52","hashOfConfig":"46"},{"size":225,"mtime":1608442354852,"results":"53","hashOfConfig":"46"},{"size":408,"mtime":1607878345212,"results":"54","hashOfConfig":"46"},{"size":998,"mtime":1608450202501,"results":"55","hashOfConfig":"46"},{"size":352,"mtime":1607880209247,"results":"56","hashOfConfig":"46"},{"size":457,"mtime":1608466102115,"results":"57","hashOfConfig":"46"},{"size":2195,"mtime":1608196555050,"results":"58","hashOfConfig":"46"},{"size":1376,"mtime":1608297642847,"results":"59","hashOfConfig":"46"},{"size":266,"mtime":1607942218787,"results":"60","hashOfConfig":"46"},{"size":1980,"mtime":1608466102110,"results":"61","hashOfConfig":"46"},{"size":570,"mtime":1608187904853,"results":"62","hashOfConfig":"46"},{"size":1228,"mtime":1608356841762,"results":"63","hashOfConfig":"46"},{"size":6282,"mtime":1608363790848,"results":"64","hashOfConfig":"46"},{"size":274,"mtime":1608471398799,"results":"65","hashOfConfig":"46"},{"size":6197,"mtime":1608466102144,"results":"66","hashOfConfig":"46"},{"size":899,"mtime":1608453932924,"results":"67","hashOfConfig":"46"},{"size":7486,"mtime":1608466102148,"results":"68","hashOfConfig":"46"},{"size":3128,"mtime":1608466102139,"results":"69","hashOfConfig":"46"},{"size":3122,"mtime":1608466102135,"results":"70","hashOfConfig":"46"},{"size":1594,"mtime":1608379538559,"results":"71","hashOfConfig":"46"},{"size":1609,"mtime":1608371842997,"results":"72","hashOfConfig":"46"},{"size":1577,"mtime":1608466102157,"results":"73","hashOfConfig":"46"},{"size":1397,"mtime":1608467672174,"results":"74","hashOfConfig":"46"},{"size":2923,"mtime":1608472597386,"results":"75","hashOfConfig":"46"},{"size":2090,"mtime":1608383164458,"results":"76","hashOfConfig":"46"},{"size":1016,"mtime":1608384179422,"results":"77","hashOfConfig":"46"},{"size":735,"mtime":1608384826386,"results":"78","hashOfConfig":"46"},{"size":834,"mtime":1608385764806,"results":"79","hashOfConfig":"46"},{"size":2183,"mtime":1608389539835,"results":"80","hashOfConfig":"46"},{"size":1848,"mtime":1608450987887,"results":"81","hashOfConfig":"46"},{"size":1162,"mtime":1608466102128,"results":"82","hashOfConfig":"46"},{"size":3825,"mtime":1608452556632,"results":"83","hashOfConfig":"46"},{"size":2396,"mtime":1608449881581,"results":"84","hashOfConfig":"46"},{"size":1053,"mtime":1608448722281,"results":"85","hashOfConfig":"46"},{"size":1135,"mtime":1608466102122,"results":"86","hashOfConfig":"46"},{"size":1088,"mtime":1608451430046,"results":"87","hashOfConfig":"46"},{"size":1548,"mtime":1608452419473,"results":"88","hashOfConfig":"46"},{"size":272,"mtime":1608471048805,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nj9x7y",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\91637\\mern\\client\\src\\App.js",[],"C:\\Users\\91637\\mern\\client\\src\\index.js",[],["198","199"],"C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Navbar.js",["200"],"import React, { Fragment } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport {logout} from '../../actions/auth'\r\nfunction Navbar({auth:{isAuthenticated,loading},logout}) {\r\n  const authLinks=(\r\n    <ul>\r\n       <li><Link to='/profiles'>Users</Link></li>\r\n       <li><Link to='/posts'>Posts</Link></li>\r\n       <li><Link to='/dashboard'><i className=\"fas fa-user\"/>{' '}<span className=\"hide-sm\">Dashboard</span></Link></li>\r\n    <li><Link to='#!' onClick={logout}><i className=\"fas fa-sign-out-alt\"/>{' '}<span className=\"hide-sm\">Logout</span></Link></li>\r\n    \r\n  </ul>\r\n  );\r\n\r\n  \r\n  const guestLinks=( <ul>\r\n    <li><Link to='/profiles'>Users</Link></li>\r\n    <li><Link to='/register'>Register</Link></li>\r\n    <li><Link to='/login'>Login</Link></li>\r\n  </ul>);\r\n   \r\n  \r\n  return (\r\n        <nav className=\"navbar\" style={{backgroundColor:\"#0d1117\"}}>\r\n      <h1>\r\n        <Link to='/'><i className=\"fas fa-rocket\"></i>ProHub</Link>\r\n      </h1>\r\n     {!loading&& <Fragment>{isAuthenticated?authLinks:guestLinks}</Fragment>}\r\n    </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps= state=>({\r\n  auth:state.auth\r\n})\r\nexport default connect(mapStateToProps,{logout})(Navbar);","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\auth\\Register.js",["201"],"import React,{Fragment,useState} from 'react'\r\nimport { Link,Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {setAlert} from '../../actions/alert'\r\nimport {register} from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\n function Register (props)  {\r\n     const [FormData,setFormData]=useState({\r\n         email:\"\",\r\n         name:\"\",\r\n         password:\"\",\r\n         password2:\"\"\r\n     })\r\n     const {name,email,password,password2}=FormData;\r\n     const onChange =(e)=>{\r\n     \r\n        setFormData({...FormData,[e.target.name]:e.target.value})\r\n     }\r\n     const onSubmit =async(e)=>{\r\n            e.preventDefault();\r\n           if(password!==password2)\r\n           {\r\n            props.setAlert('Password doesnot match','danger')\r\n               \r\n           }\r\n           else\r\n           {\r\n              props.register({name,email,password})\r\n            }\r\n     }\r\n     if(props.isAuthenticated)\r\n     {\r\n        return  <Redirect to='/dashboard'/>\r\n     }\r\n    return (\r\n      \r\n            <Fragment>\r\n                <h1 \r\n                style={{textAlign:\"center\",color:\"rgb(13, 17, 23)\"}}\r\n                className=\"large\">Welcome New Friend!</h1>\r\n      <p className=\"lead\" style={{textAlign:\"center\",color:\"green\"}}><i className=\"fas fa-comment-alt\"></i> Create Your Account</p>\r\n      <form className=\"form\" style={{width:\"50%\",alignContent:\"center\",margin:\"0 auto\"}} onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Name\" name=\"name\" value={FormData.name} onChange={e=>onChange(e)}  />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={FormData.email} onChange={e=>onChange(e)} />\r\n          \r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            \r\n            value={FormData.password} onChange={e=>onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n          \r\n            value={FormData.password2} onChange={e=>onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-success\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\" style={{textAlign:\"center\"}}>\r\n        Already have an account? <Link  style={{color:\"red\"}}\r\n        to=\"/login\">Sign In</Link>\r\n      </p>\r\n    \r\n            </Fragment>\r\n      \r\n    )\r\n}\r\nRegister.prototype={\r\n  setAlert:PropTypes.func.isRequired,\r\n  register:PropTypes.func.isRequired,\r\n  isAuthenticated:PropTypes.bool.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n  isAuthenticated:state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps,{setAlert,register})(Register);","C:\\Users\\91637\\mern\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\91637\\mern\\client\\src\\store.js",[],"C:\\Users\\91637\\mern\\client\\src\\reducers\\index.js",[],"C:\\Users\\91637\\mern\\client\\src\\reducers\\alert.js",["202"],"\r\nimport {SET_ALERT,REMOVE_ALERT} from '../actions/types'\r\nconst initialState=[];\r\nexport default function(state=initialState,action){\r\n    const {type,payload}=action;\r\n    switch(type)\r\n    {\r\n        case SET_ALERT:\r\n            return [...state,payload] ;\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert=>alert.id!==payload);\r\n            default :\r\n            return state;\r\n    }\r\n}","C:\\Users\\91637\\mern\\client\\src\\actions\\types.js",[],"C:\\Users\\91637\\mern\\client\\src\\actions\\alert.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\91637\\mern\\client\\src\\actions\\auth.js",["203"],"import Axios from 'axios';\r\nimport {setAlert, SetAlert} from './alert';\r\nimport {REGISTER_FAIL,REGISTER_SUCCESS,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_PROFILE} from '../actions/types';\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\nexport const loaduser=()=>async dispatch=>{\r\n    if(localStorage.token)\r\n    {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n      \r\n        const res=await Axios.get('/api/auth');\r\n        \r\n        dispatch({\r\n            type:USER_LOADED,\r\n            payload:res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        console.log(err.message)\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\nexport const register =({name,email,password})=>async dispatch =>{\r\n    const config ={\r\n        headers:{\r\n            'content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body=JSON.stringify({name,email,password});\r\n\r\n    try {\r\n    const res=await Axios.post('/api/users',body,config);\r\n    dispatch({\r\n        type:REGISTER_SUCCESS,\r\n        payload:res.data\r\n    });    \r\n    dispatch(loaduser());\r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\nexport const login =({email,password})=>async dispatch =>{\r\n    const config ={\r\n        headers:{\r\n            'content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body=JSON.stringify({email,password});\r\n\r\n    try {\r\n       \r\n    const res=await Axios.post('/api/auth',body,config);\r\n    dispatch({\r\n        type:LOGIN_SUCCESS,\r\n        payload:res.data\r\n    });    \r\n    dispatch(loaduser());\r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\nexport const logout=()=> dispatch=>{\r\n    dispatch({type:CLEAR_PROFILE})\r\n    dispatch({type:LOGOUT})\r\n}","C:\\Users\\91637\\mern\\client\\src\\reducers\\auth.js",["204"],"\r\nimport {REGISTER_FAIL,REGISTER_SUCCESS,USER_LOADED,AUTH_ERROR,LOGIN_FAIL,LOGIN_SUCCESS,LOGOUT, ACCOUNT_DELETED} from '../actions/types';\r\n\r\nconst initialState={\r\n    token:localStorage.getItem('token'),\r\n    isAuthenticated:null,\r\n    loading:true,\r\n    user:null\r\n}\r\n\r\n\r\n\r\nexport default function(state=initialState,action)\r\n{\r\n    const {type,payload}=action;\r\n    switch(type)\r\n    {\r\n        \r\n            \r\n        case USER_LOADED:\r\n            \r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                loading:false,\r\n                user:payload\r\n            }\r\n            \r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',payload.token);\r\n            return{\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated:true,\r\n                loading:false\r\n            }\r\n        \r\n               \r\n       \r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                user:null,\r\n                token:null,\r\n                isAuthenticated:false,\r\n                loading:false\r\n            };\r\n\r\n        default :\r\n        return state;\r\n    }\r\n}","C:\\Users\\91637\\mern\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Dashboard.js",["205"],"import React,{Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {deleteAccount, getCurrentProfile} from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner'\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardAction from './DashboardAction'\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nconst Dashboard = ({getCurrentProfile,auth:{user},profile:{profile,loading},deleteAccount}) => {\r\n    useEffect(\r\n        ()=>{\r\n            getCurrentProfile();\r\n        },[]\r\n    )\r\n\r\n    return (\r\n        loading && profile===null ? <Spinner/> :<Fragment>\r\n            <h1 className=\"large text-success\" style={{fontWeight:\"lighter\"}}>Dashboard</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i><span >Welcome,</span> <span style={{color:\"#1a4654\"}}>{user && user.name}</span>\r\n            </p>\r\n            {profile !==null ? <Fragment>\r\n                <DashboardAction id={user._id}/>\r\n                \r\n                <Experience experience={profile.experience}/>\r\n                <Education education={profile.education}/>\r\n                <div className=\"my-2\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>deleteAccount()}>\r\n                        <i className=\"fas fa-user-minus\">Delete Account</i>\r\n                    </button>\r\n                </div>\r\n\r\n            </Fragment> :<Fragment><p>No profile found,Please add details</p><Link to='/create-profile' className=\"btn btn-primary my-1\">Create profile</Link></Fragment>}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    profile:PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth,\r\n    profile:state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{getCurrentProfile,deleteAccount})(Dashboard);\r\n\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\91637\\mern\\client\\src\\reducers\\profile.js",["206"],"import { GET_PROFILE,GET_PROFILES, PROFILE_ERROR,CLEAR_PROFILE, UPDATE_PROFILE, GET_REPOS } from \"../actions/types\";\r\n\r\nconst initialState={\r\n    profile:null,\r\n    profiles:[],\r\n    respos:[],\r\n    loading:true,\r\n    error:{}\r\n}\r\nexport default function (state=initialState,action){\r\n    const {type,payload}=action;\r\n    switch(type)\r\n    {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile:payload,\r\n                loading:false\r\n            };\r\n        case GET_PROFILES:\r\n            return{\r\n                ...state,\r\n                profiles:payload,\r\n                loading:false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return{\r\n                ...state,\r\n                error:payload,\r\n                loading:false\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile:null,\r\n                repos:[],\r\n                loading:false\r\n            }\r\n        case GET_REPOS:\r\n            return{\r\n                ...state,\r\n                repos:payload,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\91637\\mern\\client\\src\\actions\\profile.js",["207"],"import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {CLEAR_PROFILE, GET_PROFILE,GET_PROFILES,GET_REPOS,PROFILE_ERROR, UPDATE_PROFILE,ACCOUNT_DELETED} from './types';\r\n\r\n\r\nexport const getCurrentProfile=()=>async dispatch=>{\r\ntry {\r\n    const res=await axios.get('/api/profile/me');\r\n    dispatch({\r\n        type:GET_PROFILE,\r\n        payload:res.data\r\n    })\r\n} catch (err) {\r\n    dispatch({\r\n        type:PROFILE_ERROR,\r\n        payload:{msg:err.response.statusText,status:err.response.status}\r\n    })\r\n}\r\n}\r\nexport const getProfiles=()=>async dispatch=>{\r\n    dispatch({type:CLEAR_PROFILE})\r\n    try {\r\n        const res=await axios.get('/api/profile/');\r\n        dispatch({\r\n            type:GET_PROFILES,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n    }\r\nexport const getProfilesById=(userId)=>async dispatch=>{\r\n    console.log(userId);\r\n        try {\r\n            const res=await axios.get(`/api/profile/user/${userId}`);\r\n            \r\n            dispatch({\r\n                type:GET_PROFILE,\r\n                payload:res.data\r\n            })\r\n        } catch (err) {\r\n            \r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload:{msg:err.response.statusText,status:err.response.status}\r\n            })\r\n        }\r\n        }\r\n    export const getGithubRepos=(username)=>async dispatch=>{\r\n        \r\n            try {\r\n                const res=await axios.get(`/api/profile/github/${username}`);\r\n                dispatch({\r\n                    type:GET_REPOS,\r\n                    payload:res.data\r\n                })\r\n            } catch (err) {\r\n                dispatch({\r\n                    type:PROFILE_ERROR,\r\n                    payload:{msg:err.response.statusText,status:err.response.status}\r\n                })\r\n            }\r\n            }\r\n//create or update\r\nexport const createProfile=(formData,history,edit=false)=>async dispatch =>\r\n{\r\n    try {\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const res=await axios.post('/api/profile',formData,config);\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert(edit ?'Profile Updated':\"Profile Created\",'success' ));\r\n      \r\n            history.push('/dashboard');\r\n        \r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\n//Add Experience\r\nexport const addExperience=(formData,history)=> async dispatch =>{\r\n\r\n    try {\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const res=await axios.put('/api/profile/experience',formData,config);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Experience Added','success' ));\r\n      \r\n            history.push('/dashboard');\r\n        \r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const addEducation=(formData,history)=> async dispatch =>{\r\n\r\n    try {\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const res=await axios.put('/api/profile/education',formData,config);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Education Added','success' ));\r\n      \r\n            history.push('/dashboard');\r\n        \r\n    } catch (err) {\r\n        const errors =err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\n//delete\r\nexport const deleteExperience=id=>async dispatch =>{\r\n    try {\r\n        const res=await axios.delete(`/api/profile/experience/${id}`);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Experience Removed','success' ));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n};\r\nexport const deleteEducation=id=>async dispatch =>{\r\n    try {\r\n        const res=await axios.delete(`/api/profile/education/${id}`);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Education Removed','success' ));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const deleteAccount=()=>async dispatch =>{\r\n    if(window.confirm('Are You Sure You wanna Delete Your Account?'))\r\n    {\r\n        try {\r\n            const res=await axios.delete('/api/profile/');\r\n            dispatch({\r\n                type:CLEAR_PROFILE,\r\n                \r\n            });\r\n            dispatch({\r\n                type:ACCOUNT_DELETED,\r\n                \r\n            });\r\n            dispatch(setAlert('YOUR ACCOUNT HAS BEEN PERMANATLY DELETED'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload:{msg:err.response.statusText,status:err.response.status}\r\n            })\r\n        }\r\n    }\r\n    \r\n}","C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Spinner.js",["208"],"C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\DashboardAction.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\EditProfile.js",["209"],"import React,{Fragment, useState,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport {createProfile,getCurrentProfile} from '../../actions/profile'\r\nconst EditProfile = ({profile:{profile,loading},createProfile,history,getCurrentProfile}) => {\r\n    const [formData,SetFormData]=useState({\r\n        company:'',\r\n        website:'',\r\n        location:'',\r\n        status:'',\r\n        skills:'',\r\n        githubusername:'',\r\n        bio:'',\r\n        twitter:'',\r\n        facebook:'',\r\n        linkedin:'',\r\n        youtube:'',\r\n        instagram:''\r\n    });\r\n    const [displaysocialInputs,toggleSocialInputs]=useState(false);\r\n    useEffect(()=>{\r\n        getCurrentProfile();\r\n        SetFormData({\r\n            company:loading || !profile.company?'':profile.company,\r\n            website:loading || !profile.website?'':profile.website,\r\n            location:loading || !profile.location?'':profile.location,\r\n            status:loading || !profile.status?'':profile.status,\r\n            skills:loading || !profile.skills?'':profile.skills.join(','),\r\n            githubusername:loading || !profile.githubusername?'':profile.githubusername,\r\n            bio:loading || !profile.bio?'':profile.bio,\r\n            twitter:loading || !profile.social.twitter?'':profile.social.twitter,\r\n            facebook:loading || !profile.social.facebook?'':profile.social.facebook,\r\n            linkedin:loading || !profile.social.linkedin?'':profile.social.linkedin,\r\n            youtube:loading || !profile.social.youtube?'':profile.social.youtube,\r\n            instagram:loading || !profile.social.instagram?'':profile.social.instagram\r\n        })\r\n    },[loading])\r\n    const{\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    }=formData;\r\n    const onChange =e =>SetFormData({...formData,[e.target.name]:e.target.value});\r\n     \r\n    const onsubmit=e=>{\r\n        e.preventDefault();\r\n        createProfile(formData,history,true)\r\n    }\r\n    return (\r\n        <Fragment> \r\n            <h1 className=\"large\" style={{color:\"black\",textAlign:\"center\"}}>\r\n        Edit Your Profile\r\n      </h1>\r\n      <p className=\"lead\" style={{width:\"50%\",margin:\"0 auto\"}}>\r\n        <i className=\"fas fa-user\"></i> Some Truth and some Myth and You are done\r\n        <h6 style={{textAlign:\"left\"}}>* = required field</h6>\r\n      </p>\r\n      \r\n      <form className=\"form\" style={{width:\"50%\",margin:\"0 auto\"}} onSubmit={e=>onsubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e=>onChange(e)}>\r\n            <option value=\"0\">* Select Your Profession</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\"  value={company} onChange={e=>onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\"  value={website} onChange={e=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\"  value={location} onChange={e=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Bangalore, karnataka)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\"  value={skills} onChange={e=>onChange(e)}/>\r\n          {console.log(skills)}\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,React)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername} onChange={e=>onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\"  value={bio} onChange={e=>onChange(e)}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={()=>toggleSocialInputs(!displaysocialInputs)}\r\n          type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaysocialInputs &&<Fragment>\r\n            <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\"  value={twitter} onChange={e=>onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\"  value={facebook} onChange={e=>onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\"  value={youtube} onChange={e=>onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\"  value={linkedin} onChange={e=>onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\"  value={instagram} onChange={e=>onChange(e)}/>\r\n        </div>\r\n        </Fragment>}\r\n      \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nEditProfile.propTypes = {\r\n    createProfile:PropTypes.func.isRequired,\r\n    profile:PropTypes.func.isRequired,\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n\r\n}\r\nconst mapStateToProps =state =>({\r\n    profile:state.profile\r\n}); \r\n\r\nexport default connect(mapStateToProps,{createProfile,getCurrentProfile})(withRouter(EditProfile));\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\AddExperience.js",["210"],"import React, { Fragment,useState } from 'react'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {addExperience} from '../../actions/profile'\r\nconst AddExperience = ({addExperience,history}) => {\r\n    const [formData,setFormData]=useState({\r\n        company:'',\r\n        title:'',\r\n        location:'',\r\n        from:'',\r\n        to:'',\r\n        current:false,\r\n        description:'' \r\n    });\r\n    const [toDateDisabled,toggleDisabled]=useState(false);\r\n    const {company,title,location,from,to,current,description}=formData;\r\n    const onChange =e=>setFormData({...formData,[e.target.name]:e.target.value})\r\n    return (\r\n        <Fragment>\r\n             <h1 className=\"large text-success\" style={{textAlign:\"center\"}}>\r\n       Add An Experience\r\n      </h1>\r\n      <p className=\"lead\" style={{textAlign:\"center\"}}>\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <h3 style={{width:\"50%\",margin:\"0 auto\"}}>* = required field</h3>\r\n      <form className=\"form\" style={{width:\"50%\",margin:\"0 auto\"}}\r\n      onSubmit={\r\n          e=>{\r\n              e.preventDefault();\r\n              addExperience(formData,history);\r\n\r\n          }\r\n      }>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e=>onChange(e)} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e=>onChange(e)}  required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=>onChange(e)}  />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e=>onChange(e)}  />\r\n        </div>\r\n         <div className=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" value={current} onChange={e=>{\r\n              setFormData({...formData,current:!current});\r\n              toggleDisabled(!toDateDisabled);\r\n          }}  />{' '}Current Job</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e=>onChange(e)} disabled={toDateDisabled?'disabled':''} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description} onChange={e=>onChange(e)} \r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null,{addExperience})(withRouter(AddExperience))\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\profile-forms\\AddEducation.js",["211"],"import React, { Fragment,useState } from 'react'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {addEducation} from '../../actions/profile'\r\nconst AddEducation = ({addEducation,history}) => {\r\n    const [formData,setFormData]=useState({\r\n        school:'',\r\n        degree:'',\r\n        fieldofstudy:'',\r\n        from:'',\r\n        to:'',\r\n        current:false,\r\n        description:'' \r\n    });\r\n    const [toDateDisabled,toggleDisabled]=useState(false);\r\n    const {school,degree,fieldofstudy,from,to,current,description}=formData;\r\n    const onChange =e=>setFormData({...formData,[e.target.name]:e.target.value})\r\n    return (\r\n        <Fragment>\r\n             <h1 className=\"large text-success\" style={{textAlign:\"center\"}}>\r\n       Add An Education\r\n      </h1>\r\n      <p className=\"lead\" style={{textAlign:\"center\"}}>\r\n        <i className=\"fas fa-code-branch\"></i> Add any School or College You have attended\r\n      </p>\r\n      <h3 style={{width:\"50%\",margin:\"0 auto\"}}>* = required field</h3>\r\n      <form className=\"form\" style={{width:\"50%\",margin:\"0 auto\"}}\r\n      onSubmit={\r\n          e=>{\r\n              e.preventDefault();\r\n              addEducation(formData,history);\r\n\r\n          }\r\n      }>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* School or College\" name=\"school\" value={school} onChange={e=>onChange(e)} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" value={degree} onChange={e=>onChange(e)}  required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Field of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e=>onChange(e)}  />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e=>onChange(e)}  />\r\n        </div>\r\n         <div className=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" value={current} onChange={e=>{\r\n              setFormData({...formData,current:!current});\r\n              toggleDisabled(!toDateDisabled);\r\n          }}  />{' '}Current acadmeic</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e=>onChange(e)} disabled={toDateDisabled?'disabled':''} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Project Description\"\r\n            value={description} onChange={e=>onChange(e)} \r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null,{addEducation})(withRouter(AddEducation))\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profiles\\ProfileItem.js",["212"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nconst ProfileItem = (props) => {\r\n   \r\n    return (\r\n        <div className=\"profile bg-light\" style={{minHeight:\"35vh\",marginLeft:\"auto\",marginRight:\"auto\"}}>\r\n           <img className=\"round-img\" style={{width:\"80%\",marginBottom:\"10%\"}} src={props.profile.user.avatar} alt=\"\"/>\r\n           <div style={{marginTop:\"-12%\"}}>\r\n               <h2 style={{marginTop:\"-2%\"}}>{props.profile.user.name}</h2>\r\n               <p>{props.profile.status} {props.profile.company && <span> at {props.profile.company}</span>}</p>\r\n               <p style={{marginTop:'1%'}}>{props.profile.location && <span>{props.profile.location}</span>}</p>\r\n               <Link to={`/profile/${props.profile.user._id}`} className='btn btn-primary' style={{borderRadius:\"5px\"}}>View Profile</Link>\r\n           </div>\r\n           <ul>\r\n               <h3>Skill Set</h3>\r\n               {props.profile.skills && props.profile.skills.slice(0,4).map((skill,index)=>(\r\n                   <li key={index} className=\"text-success\"  style={{background:\"white\",border:\"solid 1px #d6d6d6\"}}>\r\n                       <i className=\"fas fa-check\" style={{marginLeft:\"10%\"}}/><span>{skill}</span>\r\n                   </li>\r\n               ))}\r\n           </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileItem;\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\Profile.js",["213","214"],"C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileExperience.js",["215"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nconst ProfileExperience = ({experience:{\r\n    company,title,location,current,to,from,description\r\n}}) => {\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-dark\">{company}</h3>\r\n            <p>\r\n                <Moment format=\"YYYY/MM/DD\">{from}</Moment> - {\r\n                    !to ?' Now':<Moment format=\"YYYY/MM/DD\">{to}</Moment>\r\n                }\r\n            </p>\r\n            <p><strong>Position: </strong>{title}</p>\r\n            <p>\r\n              <strong>Description: {description} </strong>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n\r\n}\r\n\r\nexport default ProfileExperience\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileEducation.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\profile\\ProfileGithub.js",["216","217","218"],"import React,{useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner'\r\nimport {getGithubRepos} from '../../actions/profile'\r\nconst ProfileGithub = ({username,getGithubRepos,repos}) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n        \r\n    }, [])\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\">\r\n                Github Repos\r\n            </h2>\r\n            {\r\n                !repos ?<Spinner/> :\r\n                (\r\n                    repos.map(repo=>(\r\n                        <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n                            <div><h4>\r\n                                    <a \r\n                                    href={repo.html_url}\r\n                                    target='_blank'\r\n                                   \r\n                                    >{repo.name}</a>\r\n                                </h4>\r\n                                <p>{repo.description}</p>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <ul>\r\n                                    <li className=\"badge badge-primary\">\r\n                                        Stars:{repo.stargazers_count}\r\n                                    </li>\r\n                                    <li className=\"badge badge-success\">\r\n                                        Watchers:{repo.watchers_count}\r\n                                    </li>\r\n                                    <li className=\"badge badge-light\">\r\n                                        Forks:{repo.forks_count}\r\n                                    </li>\r\n                                </ul>\r\n                                </div>\r\n                                </div>)\r\n                        \r\n                        )\r\n                )\r\n            }\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n\r\n}\r\nconst mapStateToProfile=state=>(\r\n    {\r\n        repos:state.profile.repos\r\n    }\r\n)\r\nexport default connect(mapStateToProfile,{getGithubRepos})(ProfileGithub);\r\n","C:\\Users\\91637\\mern\\client\\src\\reducers\\post.js",["219"],"import {ADD_POST, DELETE_POST, GET_POSTS,GET_POST,POST_ERROR, UPDATE_LIKE, ADD_COMMENT, REMOVE_COMMENT} from '../actions/types';\r\nconst initialState={\r\n    posts:[],\r\n    post:null,\r\n    loading:true,\r\n    error:{}\r\n}\r\nexport default function(state=initialState,action)\r\n{\r\n    const{type,payload}=action;\r\n\r\n    switch(type)\r\n    {\r\n        case GET_POSTS:\r\n            return{\r\n                ...state,\r\n                posts:payload,\r\n                loading:false\r\n            };\r\n        case GET_POST:\r\n                return{\r\n                    ...state,\r\n                    post:payload,\r\n                    loading:false\r\n                };\r\n        case POST_ERROR:\r\n            return{\r\n                ...state,\r\n                error:payload,\r\n                loading:false\r\n            };\r\n        case UPDATE_LIKE:\r\n            return{\r\n                ...state,\r\n                posts:state.posts.map(post=>post._id===payload.postId ? {...post,likes:payload.likes }:post) \r\n                ,loading:false\r\n            }\r\n        case DELETE_POST:\r\n            return{\r\n                ...state,\r\n                posts:state.posts.filter(post=>post._id!==payload),\r\n                loading:false\r\n            }\r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                posts:[payload,...state.posts]\r\n            }\r\n        case ADD_COMMENT:\r\n            return{\r\n                ...state,\r\n                post:{...state.post,comments:payload},\r\n                loading:false\r\n            }\r\n        case REMOVE_COMMENT:\r\n                return{\r\n                    ...state,\r\n                    post:{...state.post,comments:state.post.comments.filter(comment=>comment._id!==payload)}\r\n                    ,loading:false\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\91637\\mern\\client\\src\\components\\posts\\Posts.js",["220"],"import React,{Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {getPosts} from '../../actions/post';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm'\r\nconst Posts = ({getPosts,post:{posts,loading}}) => {\r\n    useEffect(()=>{\r\n        getPosts();\r\n    },[getPosts])\r\n    return (\r\n       loading ? <Spinner/>:<Fragment>\r\n           <h1 className=\"large text-primary\" style={{fontSize:\"lighter\"}}>Posts</h1>\r\n            <p className=\"lead\">\r\n                <i className='fas fa-user'></i>Welcome to community\r\n            </p>\r\n            <PostForm/>\r\n            <div className='posts'>\r\n                {\r\n                    posts.map(post=>(\r\n                        <PostItem key={post._id} post={post}/>\r\n                    ))\r\n                }\r\n            </div>\r\n       </Fragment>\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts:PropTypes.func.isRequired,\r\n    post:PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n    post:state.post\r\n})\r\n\r\nexport default connect(mapStateToProps,{getPosts})(Posts);\r\n","C:\\Users\\91637\\mern\\client\\src\\actions\\post.js",["221","222"],"import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport { ADD_POST, DELETE_POST, GET_POSTS,GET_POST, POST_ERROR, UPDATE_LIKE, ADD_COMMENT, REMOVE_COMMENT } from './types';\r\n\r\nexport const getPosts=()=>async dispatch =>{\r\n    try {\r\n        const res=await axios.get('/api/posts');\r\n        dispatch({\r\n            type:GET_POSTS,\r\n            payload:res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const addLike=postId=>async dispatch =>{\r\n    try {\r\n        const res=await axios.put(`api/posts/like/${postId}`);\r\n        dispatch({\r\n            type:UPDATE_LIKE,\r\n            payload:{postId,likes:res.data}\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const removeLike=postId=>async dispatch =>{\r\n    try {\r\n        const res=await axios.put(`api/posts/unlike/${postId}`);\r\n        dispatch({\r\n            type:UPDATE_LIKE,\r\n            payload:{postId,likes:res.data}\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const deletePost=postId=>async dispatch =>{\r\n    try {\r\n        const res=await axios.delete(`api/posts/${postId}`);\r\n        dispatch({\r\n            type:DELETE_POST,\r\n            payload:postId\r\n        });\r\n        dispatch(setAlert('Post Removed','success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const addPost=FormData=>async dispatch =>{\r\n    const config={\r\n        headers:{\r\n            'Content-type':'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res=await axios.post('api/posts',FormData,config);\r\n        dispatch({\r\n            type:ADD_POST,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Post Created','success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const getPost=(id)=>async dispatch =>{\r\n    try {\r\n        const res=await axios.get(`/api/posts/${id}`);\r\n        dispatch({\r\n            type:GET_POST,\r\n            payload:res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const addComment=(postId,FormData)=>async dispatch =>{\r\n    const config={\r\n        headers:{\r\n            'Content-type':'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res=await axios.post(`/api/posts/comment/${postId}`,FormData,config);\r\n        dispatch({\r\n            type:ADD_COMMENT,\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Comment Added','success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const deleteComment=(postId,commentId)=>async dispatch =>{\r\n    \r\n    try {\r\n        const res=await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n        dispatch({\r\n            type:REMOVE_COMMENT,\r\n            payload:commentId\r\n        });\r\n        dispatch(setAlert('Comment Removed','success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n    }\r\n}","C:\\Users\\91637\\mern\\client\\src\\components\\posts\\PostItem.js",["223"],"import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link, link} from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport {connect} from 'react-redux';\r\nimport {addLike,removeLike,deletePost} from '../../actions/post'\r\nconst PostItem = ({addLike,removeLike,deletePost,auth,post:{_id,text,name,avatar,user,likes,comments,date},showActions}) => {\r\n    return (\r\n        <div class=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <Link to={`/profile/${user}`}>\r\n              <img\r\n                class=\"round-img\"\r\n                src={avatar}\r\n                alt=\"\"\r\n              />\r\n              <h4>{name}</h4>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <p class=\"my-1\">\r\n             {text}\r\n            </p>\r\n             <p class=\"post-date\">\r\n                Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n            </p>\r\n            {\r\n              showActions && <Fragment>\r\n                <button onClick={e=>addLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n              <i class=\"fas fa-thumbs-up\"></i>\r\n              {' '} {\r\n                  likes.length> 0 && (\r\n                        <span>{likes.length}</span>\r\n                  )\r\n              }\r\n            \r\n            </button>\r\n            <button onClick={e=>removeLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n              <i class=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\r\n              Discussion{\" \"} {comments.length >0 &&(\r\n                <span class='comment-count'>{comments.length}</span>\r\n              )}\r\n            </Link>\r\n           {!auth.loading && user===auth.user._id &&(\r\n                <button    \r\n                onClick={e=>deletePost(_id)}  \r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n              >\r\n                <i class=\"fas fa-times\"></i>\r\n              </button>\r\n           )}\r\n                </Fragment>\r\n            }\r\n            \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\nPostItem.defaultProps={\r\n  showActions:true\r\n}\r\nPostItem.propTypes = {\r\n    post:PropTypes.object.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n}\r\nconst mapstateToProps=state=>({\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapstateToProps,{addLike,removeLike,deletePost})(PostItem);\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\posts\\PostForm.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\post\\Post.js",["224","225","226"],"import React,{Fragment, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport {getPost} from '../../actions/post'\r\nimport PostItem from '../posts/PostItem'\r\nimport CommentForm from './CommentForm'\r\nimport CommentItem from './CommentItem'\r\nconst Post = ({getPost,post:{post,loading},match}) => {\r\n    useEffect(()=>{\r\n        getPost(match.params.id);\r\n    },[getPost])\r\n    return (\r\n        loading || post===null ?<Spinner/>:<Fragment>\r\n            <Link to=\"/posts\" className=\"btn\">Back To Posts</Link>\r\n            <PostItem post={post} showActions={false}/>\r\n            <CommentForm postId={post._id}/>\r\n            <div className=\"comments\">\r\n                {post.comments.map(comment=>(\r\n                    <CommentItem key={comment._id} comment={comment} postId={post._id}/>\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n\r\n}\r\nconst mapStateToProps=state=>({\r\n    post:state.post\r\n})\r\n\r\nexport default connect(mapStateToProps,{getPost})(Post);\r\n","C:\\Users\\91637\\mern\\client\\src\\components\\post\\CommentForm.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\post\\CommentItem.js",[],"C:\\Users\\91637\\mern\\client\\src\\components\\layout\\Footer.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":17},{"ruleId":"231","severity":1,"message":"235","line":1,"column":15,"nodeType":"233","messageId":"234","endLine":1,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":4,"column":1,"nodeType":"238","endLine":15,"endColumn":2},{"ruleId":"231","severity":1,"message":"239","line":2,"column":19,"nodeType":"233","messageId":"234","endLine":2,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":13,"column":1,"nodeType":"238","endLine":58,"endColumn":2},{"ruleId":"240","severity":1,"message":"241","line":14,"column":11,"nodeType":"242","endLine":14,"endColumn":13,"suggestions":"243"},{"ruleId":"236","severity":1,"message":"237","line":10,"column":1,"nodeType":"238","endLine":49,"endColumn":2},{"ruleId":"231","severity":1,"message":"244","line":195,"column":19,"nodeType":"233","messageId":"234","endLine":195,"endColumn":22},{"ruleId":"236","severity":1,"message":"245","line":4,"column":1,"nodeType":"238","endLine":12,"endColumn":3},{"ruleId":"240","severity":1,"message":"246","line":38,"column":7,"nodeType":"242","endLine":38,"endColumn":16,"suggestions":"247"},{"ruleId":"231","severity":1,"message":"235","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"235","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"232","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":17},{"ruleId":"231","severity":1,"message":"232","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":17},{"ruleId":"240","severity":1,"message":"248","line":16,"column":7,"nodeType":"242","endLine":16,"endColumn":24,"suggestions":"249"},{"ruleId":"231","severity":1,"message":"232","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":17},{"ruleId":"231","severity":1,"message":"232","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":17},{"ruleId":"240","severity":1,"message":"250","line":10,"column":8,"nodeType":"242","endLine":10,"endColumn":10,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":24,"column":37,"nodeType":"254","endLine":24,"endColumn":52},{"ruleId":"236","severity":1,"message":"237","line":8,"column":1,"nodeType":"238","endLine":64,"endColumn":2},{"ruleId":"231","severity":1,"message":"235","line":1,"column":15,"nodeType":"233","messageId":"234","endLine":1,"endColumn":23},{"ruleId":"231","severity":1,"message":"244","line":52,"column":15,"nodeType":"233","messageId":"234","endLine":52,"endColumn":18},{"ruleId":"231","severity":1,"message":"244","line":126,"column":15,"nodeType":"233","messageId":"234","endLine":126,"endColumn":18},{"ruleId":"231","severity":1,"message":"255","line":3,"column":15,"nodeType":"233","messageId":"234","endLine":3,"endColumn":19},{"ruleId":"231","severity":1,"message":"235","line":1,"column":15,"nodeType":"233","messageId":"234","endLine":1,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":17},{"ruleId":"240","severity":1,"message":"248","line":13,"column":7,"nodeType":"242","endLine":13,"endColumn":16,"suggestions":"256"},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'SetAlert' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["259"],"'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social.facebook', 'profile.social.instagram', 'profile.social.linkedin', 'profile.social.twitter', 'profile.social.youtube', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["260"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'getGithubRepos' and 'username'. Either include them or remove the dependency array. If 'getGithubRepos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["262"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'link' is defined but never used.",["263"],"no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"274","text":"275"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social.facebook, profile.social.instagram, profile.social.linkedin, profile.social.twitter, profile.social.youtube, profile.status, profile.website]",{"range":"276","text":"277"},"Update the dependencies array to be: [getProfilesById, match.params.id]",{"range":"278","text":"279"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"280","text":"281"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"282","text":"283"},[579,581],"[getCurrentProfile]",[1747,1756],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social.facebook, profile.social.instagram, profile.social.linkedin, profile.social.twitter, profile.social.youtube, profile.status, profile.website]",[650,667],"[getProfilesById, match.params.id]",[345,347],"[getGithubRepos, username]",[489,498],"[getPost, match.params.id]"]